import { useState, useEffect } from 'react';
import { useQuery, useMutation } from '@tanstack/react-query';
import { queryClient } from '@/lib/queryClient';
import { Bell, Mail, ShieldAlert, Save, Trash2, AlertTriangle, Sun, Moon, Laptop } from 'lucide-react';
import { useTheme } from '@/lib/theme-context';
import { useToast } from '@/hooks/use-toast';
import { useAuth } from '@/hooks/use-auth';
import { SectionBackground } from "@/components/ui/section-background";
import { ThemeOverlay } from "@/components/ui/theme-overlay";
import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogCancel,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
  AlertDialogTrigger,
} from "@/components/ui/alert-dialog";

import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from '@/components/ui/card';
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from '@/components/ui/tabs';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Switch } from '@/components/ui/switch';
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select';

function ThemeSelector() {
  const { theme, setTheme } = useTheme();
  
  return (
    <div className="flex flex-col space-y-4">
      <button
        onClick={() => setTheme('light')}
        className={`flex items-center p-3 rounded-lg ${
          theme === 'light' ? 'bg-primary/20 text-primary' : 'hover:bg-gray-100 dark:hover:bg-gray-700'
        }`}
      >
        <Sun className="h-5 w-5 mr-2" />
        <div className="flex flex-col items-start">
          <span className="font-medium">Light</span>
          <span className="text-xs text-muted-foreground">Use light theme</span>
        </div>
      </button>
      
      <button
        onClick={() => setTheme('dark')}
        className={`flex items-center p-3 rounded-lg ${
          theme === 'dark' ? 'bg-primary/20 text-primary' : 'hover:bg-gray-100 dark:hover:bg-gray-700'
        }`}
      >
        <Moon className="h-5 w-5 mr-2" />
        <div className="flex flex-col items-start">
          <span className="font-medium">Dark</span>
          <span className="text-xs text-muted-foreground">Use dark theme</span>
        </div>
      </button>
      
      <button
        onClick={() => setTheme('system')}
        className={`flex items-center p-3 rounded-lg ${
          theme === 'system' ? 'bg-primary/20 text-primary' : 'hover:bg-gray-100 dark:hover:bg-gray-700'
        }`}
      >
        <Laptop className="h-5 w-5 mr-2" />
        <div className="flex flex-col items-start">
          <span className="font-medium">System</span>
          <span className="text-xs text-muted-foreground">Follow system preference</span>
        </div>
      </button>
    </div>
  );
}

export default function Settings() {
  const { toast } = useToast();
  const [activeTab, setActiveTab] = useState('notifications');
  const { user: currentUser } = useAuth();
  const userId = currentUser?.id;

  if (!userId) {
    return (
      <div className="text-center p-6 rounded-lg my-6">
        <h3 className="text-lg font-semibold">Please log in to access settings</h3>
      </div>
    );
  }

  return (
    <div className="space-y-6 mb-8">
      <ThemeOverlay variant="header">
        <SectionBackground pattern="settings" className="p-6">
          <h1 className="page-header">Settings</h1>
          <p className="text-gray-500 mb-4">
            Manage your account settings and notification preferences.
          </p>

          <Tabs defaultValue="notifications" value={activeTab} onValueChange={setActiveTab} className="mt-4">
            <TabsList className="grid w-full md:w-[400px] grid-cols-2">
              <TabsTrigger value="notifications">Notifications</TabsTrigger>
              <TabsTrigger value="appearance">Appearance</TabsTrigger>
            </TabsList>

            <TabsContent value="notifications" className="space-y-4 mt-6">
              <Card>
                <CardHeader>
                  <CardTitle>Notification Preferences</CardTitle>
                  <CardDescription>
                    Configure when and how you want to receive notifications about your food inventory.
                  </CardDescription>
                </CardHeader>
                <CardContent className="space-y-6">
                  <p>Notification settings here</p>
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="appearance" className="space-y-4 mt-6">
              <Card>
                <CardHeader>
                  <CardTitle>Appearance Settings</CardTitle>
                  <CardDescription>
                    Customize the look and feel of the application.
                  </CardDescription>
                </CardHeader>
                <CardContent className="space-y-6">
                  <div className="space-y-6">
                    <div>
                      <h3 className="text-lg font-medium mb-2">Theme Mode</h3>
                      <p className="text-sm text-gray-500 mb-4">Choose your preferred color theme</p>
                      <ThemeSelector />
                    </div>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>
          </Tabs>
        </SectionBackground>
      </ThemeOverlay>
    </div>
  );
}